{"version":3,"sources":["phrases.js","components/Quote.jsx","components/burst.png","components/FinishedSpiners.jsx","components/typo.png","components/Spiners.jsx","components/Watch.jsx","components/FullWatch.jsx","components/Input.jsx","App.js","reportWebVitals.js","index.js"],"names":["phrases","text","Quote","props","_isMounted","state","change","this","setInterval","setState","Math","floor","random","length","className","Component","FinishedSpiners","src","burst","alt","Spiners","started","typo","Watch","currentSeconds","currentMinutes","finishCounting","bind","minutes","seconds","finish","parseInt","countdown","prevState","clearInterval","id","toLocaleString","minimumIntegerDigits","useGrouping","undefined","FullWatch","finished","status","Input","onChange","type","min","placeholder","max","App","inputedMinutes","inputedSeconds","stoped","playPause","handleChange","event","target","value","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83854cc3.chunk.js","sourcesContent":["const phrases = [\n  { text: \"The two most powerful warriors are patience and time.\" },\n  { text: \"Time is money.\" },\n  { text: \"Time waits for no one.\" },\n  { text: \"Better three hours too soon than a minute too late.\" },\n  { text: \"Lost time is never found again.\" },\n  { text: \"Time is the most valuable thing a man can spend.\" },\n  { text: \"Time is the wisest counselor of all.\" },\n  { text: \"The key is in not spending time, but in investing it.\" },\n  { text: \"It is the time you have wasted for your rose that makes your rose so important.\" },\n  { text: \"Punctuality is the thief of time.\" },\n  { text: \"The trouble is you think you have time.\" },\n  { text: \"Time is a cruel thief to rob us of our former selves. We lose as much to life as we do to death.\" }, \n  { text: \"Suspect each moment, for it is a thief, tiptoeing away with more than it brings.\" },\n  { text: \"Time brings all things to pass.\" },\n  { text: \"Men talk of killing time, while time quietly kills them.\" },\n  { text: \"The future is uncertain but the end is always near.\" },\n  { text: \"Time takes it all, whether you want it to or not.\" },\n  { text: \"Time is a storm in which we are all lost.\" },\n  { text: \"Time is an illusion.\" },\n  { text: \"Time flies over us, but leaves its shadow behind.\" },\n  { text: \"Regret for wasted time is more wasted time.\" },\n  { text: \"You can’t make up for lost time. You can only do better in the future.\" },\n  { text: \"There’s never enough time to do all the nothing you want.\" },\n  { text: \"The time I kill is killing me.\" },\n  { text: \"Either you run the day, or the day runs you.\" },\n  { text: \"Your time is limited, so don’t waste it living someone else’s life.\" },\n  { text: \"They always say time changes things, but you actually have to change them yourself.\" },\n  { text: \"We must use time as a tool, not as a crutch.\" },\n  { text: \"If we take care of the moments, the years will take care of themselves.\" },\n  { text: \"All we have to decide is what to do with the time that is given us.\" },\n  { text: \"If time travel is possible, where are the tourists from the future.\" },\n  { text: \"Time is the longest distance between two places.\" }\n]\n\nexport default phrases;","import {Component} from 'react';\nimport phrases from '../phrases';\n\nclass Quote extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n    this.state = {\n      change: 0,\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this._isMounted && setInterval(() => {\n      this.setState({change: Math.floor(Math.random() * (phrases.length ))});\n    }, 6000)\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n }\n\n  render() {\n    \n    const { change } = this.state;\n    return (\n      <p className=\"quote\">\n        { phrases[change].text }\n      </p>\n    );\n  }\n}\n\nexport default Quote;\n","export default __webpack_public_path__ + \"static/media/burst.08a7c8ff.png\";","import { Component } from 'react';\nimport burst from './burst.png';\n\nclass FinishedSpiners extends Component {\n  render() {\n    return (\n      <div className=\"spiners-absolute\">\n        <div className=\"spiners-relative\">\n          <img src={ burst } className=\"spiner-1 spin-1\" alt=\"logo\" />\n          <img src={ burst } className=\"spiner-2 spin-2\" alt=\"logo\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FinishedSpiners;","export default __webpack_public_path__ + \"static/media/typo.3887ab42.png\";","import { Component } from 'react';\nimport typo from './typo.png'\n\nclass Spiners extends Component {\n  render() {\n    const { started } = this.props;\n\n    return (\n      <div className=\"spiners-absolute\">\n        <div className=\"spiners-relative\">\n          <img\n            src={ typo }\n            className={ started ? \"spiner-1 spin-1\" : \"spiner-1\"}\n            alt=\"decorative\" />\n          <img\n            src={ typo }\n            className={ started ? \"spiner-2 spin-2\" : \"spiner-2\"}\n            alt=\"decorative\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Spiners;","import { Component } from \"react\";\n\nclass Watch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentSeconds: 0,\n      currentMinutes: 0,\n    }\n\n    this.finishCounting = this.finishCounting.bind(this);\n  }\n\n  //  💫 OS ESTADOS SÃO ATUALIZADOS COM AS PROPS RECEBIDAS DO INPUT\n\n  componentDidMount() {\n    const { minutes, seconds, finish } = this.props;\n\n    this.setState({currentMinutes: parseInt(minutes)});\n    this.setState({currentSeconds: parseInt(seconds)});\n\n    finish(false);\n\n    this.countdown = setInterval(() => {\n      this.setState((prevState) => ({\n        currentSeconds: prevState.currentSeconds - 1\n      }));\n    }, 1000)\n  }\n\n  // ⏰\n\n  componentDidUpdate() {\n    const { currentMinutes, currentSeconds } = this.state;\n\n    currentSeconds === 0 && currentMinutes === 0 && this.finishCounting();\n\n    if (currentMinutes > 0 && currentSeconds === 0) {\n      this.setState({\n        currentMinutes: currentMinutes -1,\n        currentSeconds: 59,\n        });\n    }\n  }\n\n  // ✨ LIMPA OS ESTADOS PARA EVITAR LOOPING AO CHAMAR A CALLBACK FINISH \n\n  finishCounting() {\n    const { finish } = this.props;\n\n    clearInterval(this.countdown);\n\n    this.setState({\n      currentMinutes: '',\n      currentSeconds: '',\n    })\n\n    finish(true);\n  }\n\n  // ✳️ PARA A CONTAGEM E REMOVE A ANIMAÇÃO DO FINAL AO DESMONTAR\n\n  componentWillUnmount() {\n    const { finish } = this.props;\n\n    clearInterval(this.countdown);\n\n    finish(false);\n  }\n\n  render() {\n    const { currentMinutes, currentSeconds } = this.state;\n\n    return (\n      <div className=\"watch counting\">\n        <span id=\"minutes\">\n          { (currentMinutes)\n            .toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false}) }\n        </span>\n\n        { currentMinutes !== '' && currentSeconds !== '' ? (\n          <span className=\"\"> : </span>\n          ) : undefined \n        }\n\n        <span id=\"seconds\">\n            { (currentSeconds)\n              .toLocaleString('en-US', {minimumIntegerDigits: 2, useGrouping:false})}\n        </span>\n\n      </div>\n    );\n  }\n}\n\nexport default Watch;\n","import { Component } from 'react';\nimport FinishedSpiners from './FinishedSpiners';\nimport Spiners from './Spiners';\nimport Watch from './Watch';\n\nclass FullWatch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      finished: false,\n    }\n\n    this.finish = this.finish.bind(this);\n  }\n\n  finish(status) {\n    this.setState({ finished: status })\n  }\n\n  render() {\n    const { minutes, seconds, started } = this.props;\n    const { finished } = this.state;\n\n    return (\n      <div className=\"full-watch\">\n\n        { finished ? <FinishedSpiners /> : <Spiners started={ started } /> }\n\n        { started ? <Watch\n          minutes={ minutes }\n          seconds={ seconds }\n          started={ started }\n          finish={ this.finish }\n        /> : <span className=\"watch\">00:00</span> }\n\n      </div>\n    );\n  }\n}\n\nexport default FullWatch;\n","import { Component } from 'react';\n\nclass Input extends Component {\n  render() {\n    const { onChange } = this.props;\n\n    return (\n      <div className=\"inputs\">\n        <input\n          type=\"number\"\n          min=\"0\"\n          placeholder=\"MIN\"\n          className=\"input\"\n          id=\"inputedMinutes\"\n          onChange={ onChange }\n        />\n\n        <span className=\"separator\">:</span>\n        \n        <input\n          type=\"number\"\n          min=\"0\"\n          max=\"59\"\n          placeholder=\"SEC\"\n          className=\"input\"\n          id=\"inputedSeconds\"\n          onChange={ onChange }\n        />\n      </div>\n    )\n  }\n}\n\nexport default Input;\n\n","import { Component } from 'react';\nimport './App.css';\nimport Quote from './components/Quote';\nimport FullWatch from './components/FullWatch';\nimport Input from './components/Input';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputedMinutes: 0,\n      inputedSeconds: 0,\n      started: false,\n      stoped: true,\n    }\n\n    this.playPause = this.playPause.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  playPause() {\n    this.setState((prevState) => ({started: !prevState.started}))\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n\n  render() {\n    const { started, inputedMinutes, inputedSeconds } = this.state;\n\n    return (\n      <main className=\"App\">\n        <div className=\"buttons\">\n\n          <Input onChange={ this.handleChange } />\n\n          {/*⏯️ BOTÃO ALTERA O TEXTO               */}\n\n          <button\n            className=\"btn\"\n            id=\"start-pause\"\n            type=\"button\"\n            onClick={this.playPause}\n          >\n              {started === false ? 'START' : 'STOP'}\n          </button>\n        </div>\n  \n        <FullWatch\n          minutes={ inputedMinutes }\n          seconds={ inputedSeconds }\n          started={ started } />\n        <Quote />\n        </main>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}